        <%= form_for(@pedido, html: { class: "form-horizontal", role: "form" }) do |f| %>
          <% if @pedido.errors.any? %>
            <div class="alert alert-danger alert-dismissable" role="alert">
              <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
              <h4><%= pluralize(@pedido.errors.count, "error") %> prohibited this pedido from being saved:</h4>

              <ul>
              <% @pedido.errors.full_messages.each do |msg| %>
                <li><%= msg %></li>
              <% end %>
              </ul>
            </div>
          <% end %>
            <div id="accordion" role="tablist" aria-multiselectable="false">
              <div class="panel panel-default">
                <div class="panel-heading" role="tab" id="ClienteCollapse">
                  <h3 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#ClienteCollapse" aria-expanded="true" aria-controls="afipCollapse">
                      Cliente
                    </a>
                  </h3>
                </div>
                <div id="ClienteCollapse" class="panel-body panel-collapse collapse in" role="tabpanel" aria-labelledby="ClienteCollapse">
                  <%= render partial: 'cabecera', locals: {f: f} %>
                </div>
              </div>
            </div> 

  <div class="table-responsive-vertical shadow-z-1">
  <!-- Table starts here -->
  <table id="table" class="table table-hover">
              <thead>
              <tr>
              <th>Producto</th>
              <th>Precio</th>
              <th>Cantidad</th>
              <th>Subtotal</th>
            </tr>
            </thead>
            <tbody>
              <%= f.fields_for :detalles do |ff| %>
                 <% render 'detalle', f: ff %>
              <% end %>
            </tbody>
          </table>
        </div>
  <div class="form-group">
    <%= f.label :cantidadTotal, class: "col-sm-2 control-label" %>
    <div class="col-sm-10">
      <%= f.text_field :cantidadTotal, class: "cantidadTotal form-control" %>
    </div>
  </div>
  <div class="form-group">
      <%= f.label :precioTotal, class: "col-sm-2 control-label" %>
      <div class="col-sm-10">
      <%= f.text_field :precioTotal, class: "total form-control" %>
    </div>
  </div>
<div class="total" disabled></div>
  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <%= f.submit "Generar pedido", class: "btn btn-primary pull-right" %>
    </div>
  </div>
<% end %>


<!--<div class="subtotal">0$</div> -->
<script>
/**
 * Created by Kupletsky Sergey on 05.11.14.
 *
 * Material Design Responsive Table
 * Tested on Win8.1 with browsers: Chrome 37, Firefox 32, Opera 25, IE 11, Safari 5.1.7
 * You can use this table in Bootstrap (v3) projects. Material Design Responsive Table CSS-style will override basic bootstrap style.
 * JS used only for table constructor: you don't need it in your project
 */

$(document).ready(function() {

    var table = $('#table');

    // Table bordered
    $('#table-bordered').change(function() {
        var value = $( this ).val();
        table.removeClass('table-bordered').addClass(value);
    });

    // Table striped
    $('#table-striped').change(function() {
        var value = $( this ).val();
        table.removeClass('table-striped').addClass(value);
    });
  
    // Table hover
    $('#table-hover').change(function() {
        var value = $( this ).val();
        table.removeClass('table-hover').addClass(value);
    });

    // Table color
    $('#table-color').change(function() {
        var value = $(this).val();
        table.removeClass(/^table-mc-/).addClass(value);
    });
});

// jQueryâ€™s hasClass and removeClass on steroids
// by Nikita Vasilyev
// https://github.com/NV/jquery-regexp-classes
(function(removeClass) {

  jQuery.fn.removeClass = function( value ) {
    if ( value && typeof value.test === "function" ) {
      for ( var i = 0, l = this.length; i < l; i++ ) {
        var elem = this[i];
        if ( elem.nodeType === 1 && elem.className ) {
          var classNames = elem.className.split( /\s+/ );

          for ( var n = classNames.length; n--; ) {
            if ( value.test(classNames[n]) ) {
              classNames.splice(n, 1);
            }
          }
          elem.className = jQuery.trim( classNames.join(" ") );
        }
      }
    } else {
      removeClass.call(this, value);
    }
    return this;
  }

})(jQuery.fn.removeClass);

</script>

